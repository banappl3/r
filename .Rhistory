# Datei einlesen:
x <- read.table("basel.txt", sep="", header=T, skip=27)
getwd()
d:
cd
cd d
setw('D:\github_banappl3\data_analytics_with_r')
setw('D:\\github_banappl3\\data_analytics_with_r')
setwd('D:\\github_banappl3\\data_analytics_with_r')
getwd()
clearall
# Datei einlesen:
x <- read.table("basel.txt", sep="", header=T, skip=27)
# Variable time erzeugen:
x$time <- x$Year + x$Month/12
# Liste der MonatskÃ¼rzel
month <- c("Jan", "Feb", "Mrz", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dez")
# MonatskÃ¼rzel mit Monatzahlen verknÃ¼pfen
x$month <- factor(month[x$Month], levels=month)
# Jahresmitteltemperaturen
temp.means <- aggregate(x["Temperature"], x["Year"], mean)
# lineares Modell
x$time.scaled <- x$time - min(x$time)
fit.lm <- lm(Temperature ~ time.scaled, data=x)
# Saisonmodell
fit.season <- nls(Temperature ~ a+b*time + amp*sin(2*pi*(Month-1-shift)/11), data=x, start=list(a=10, b=0.1, amp=0.1, shift=0.1))
summary(fit.season)
library(lattice)
head(x
head(x)
x
head(x)
tail(x)
summary(x)
savehistory("D:/github_banappl3/data_analytics_with_r/terminal_code_basel.txt")
savehistory("D:/github_banappl3/data_analytics_with_r/terminal_code_basel.txt")
dim(x)
View(x)
my.packs <- installed.packages()
dump("my.packs","my.packs.txt")
View(x)
my.packs <- installed.packages()
View(my.packs)
dump("my.packs","packages/my.packs.txt")
# Datei einlesen:
x <- read.table("00_data/basel.txt", sep="", header=T, skip=27)
# Datei einlesen:
x <- read.table("00_data/basel.txt", sep="", header=T, skip=27)
# Variable time erzeugen:
x$time <- x$Year + x$Month/12
# Liste der MonatskÃ¼rzel
month <- c("Jan", "Feb", "Mrz", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dez")
# MonatskÃ¼rzel mit Monatzahlen verknÃ¼pfen
x$month <- factor(month[x$Month], levels=month)
# Jahresmitteltemperaturen
temp.means <- aggregate(x["Temperature"], x["Year"], mean)
# lineares Modell
x$time.scaled <- x$time - min(x$time)
fit.lm <- lm(Temperature ~ time.scaled, data=x)
# Saisonmodell
fit.season <- nls(Temperature ~ a+b*time + amp*sin(2*pi*(Month-1-shift)/11), data=x, start=list(a=10, b=0.1, amp=0.1, shift=0.1))
summary(fit.season)
library(lattice)
my.packs <- installed.packages()
dump("my.packs","my.packs.txt")
dump("my.packs","packages/my.packs.txt")
str(x)
savehistory("D:/github_banappl3/data_analytics_with_r/code_examples/terminal_code_basel.txt")
xyplot(Temperature ~ time, data=x)
# Plot einschränken
xyplot(Temperature ~ time, data=x,
subset = Year >2009, type="b")
xyplot(Temperature ~ Month, data=x,
groups = Year >2009, type="b")
xyplot(Temperature ~ Month, data=x,
groups = Year >2010, type="b")
xyplot(Temperature ~ Month, data=x,
groups = Year >2009, type="b")
# Plot einschränken
xyplot(Temperature ~ time, data=x,
subset = Year >2009, type="b")
xyplot(Temperature ~ Month, data=x,
groups = Year >2009, type="b")
setwd('D:\\github_banappl3\\data_analytics_with_r')
getwd()
# Die Funktion stellt die Temperatur ueber die Zeit dar.
# Rueckgabe: ein Grafik-Objekt.
plot.temp.over.time <- function(data, subset=Year > 2009, type="b")
{
library(lattice)
gr <- xyplot(Temperature ~ time, data=data,
subset=subset, type=type)
return(gr)
}
# Liest die Deklarationen von Funktionen ein und fÃ¼hrt sie aus.
rm(list=ls()) # Alle vorhanden Objekte loeschen (!)
# Konfiguration einlesen
source("config.R")
# Tools einlesen
source("graph2file.R")
source("read.weatherData.R")
x <- read.weatherData(file=config$data.file)
x <- read.weatherData(file=config$data.file)
source("Basel.temperature.avg.R")
cat("Temperaturen in Basel:\n")
print(Basel.temperature.avg(data=x, start=1860, end=1900))
print(Basel.temperature.avg(data=x, start=1900, end=1950))
# Temperaturkurve ueber die gesamte Zeit.
source("plot.temp.over.time.R")
gr <- plot.temp.over.time(data=x, subset=x$Year >= min(x$Year))
graph2file(gr, file="gr.temp.over.time", format=config$graph.format)
# Ueberlagerte Jahreskurven
source("plot.temp.season.R")
cat("Jahreskurven der Temperaturen in Basel:\n")
gr <- plot.temp.season(data=x)
graph2file(gr, file="gr.temp.seasons", format=config$graph.format)
# Ueberlagerte Jahreskurven
source("plot.temp.season.R")
cat("Jahreskurven der Temperaturen in Basel:\n")
gr <- plot.temp.season(data=x)
graph2file(gr, file="gr.temp.seasons", format=config$graph.format)
# The End.
rm(gr)
cat("Alle Kommandos ausgefuehrt!\n")
